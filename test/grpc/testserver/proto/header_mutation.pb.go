// Code generated by protoc-gen-go. DO NOT EDIT.
// source: header_mutation.proto

package istio_wasm_example_header_mutation

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type HeaderMutationRequest struct {
	Cookie               string   `protobuf:"bytes,1,opt,name=cookie,proto3" json:"cookie,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HeaderMutationRequest) Reset()         { *m = HeaderMutationRequest{} }
func (m *HeaderMutationRequest) String() string { return proto.CompactTextString(m) }
func (*HeaderMutationRequest) ProtoMessage()    {}
func (*HeaderMutationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8fe82433e62650b7, []int{0}
}

func (m *HeaderMutationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeaderMutationRequest.Unmarshal(m, b)
}
func (m *HeaderMutationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeaderMutationRequest.Marshal(b, m, deterministic)
}
func (m *HeaderMutationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeaderMutationRequest.Merge(m, src)
}
func (m *HeaderMutationRequest) XXX_Size() int {
	return xxx_messageInfo_HeaderMutationRequest.Size(m)
}
func (m *HeaderMutationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HeaderMutationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HeaderMutationRequest proto.InternalMessageInfo

func (m *HeaderMutationRequest) GetCookie() string {
	if m != nil {
		return m.Cookie
	}
	return ""
}

type HeaderMutationResponse struct {
	HeaderMutation       map[string]string `protobuf:"bytes,3,rep,name=header_mutation,json=headerMutation,proto3" json:"header_mutation,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *HeaderMutationResponse) Reset()         { *m = HeaderMutationResponse{} }
func (m *HeaderMutationResponse) String() string { return proto.CompactTextString(m) }
func (*HeaderMutationResponse) ProtoMessage()    {}
func (*HeaderMutationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8fe82433e62650b7, []int{1}
}

func (m *HeaderMutationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeaderMutationResponse.Unmarshal(m, b)
}
func (m *HeaderMutationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeaderMutationResponse.Marshal(b, m, deterministic)
}
func (m *HeaderMutationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeaderMutationResponse.Merge(m, src)
}
func (m *HeaderMutationResponse) XXX_Size() int {
	return xxx_messageInfo_HeaderMutationResponse.Size(m)
}
func (m *HeaderMutationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HeaderMutationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HeaderMutationResponse proto.InternalMessageInfo

func (m *HeaderMutationResponse) GetHeaderMutation() map[string]string {
	if m != nil {
		return m.HeaderMutation
	}
	return nil
}

func init() {
	proto.RegisterType((*HeaderMutationRequest)(nil), "istio.wasm.example.header_mutation.HeaderMutationRequest")
	proto.RegisterType((*HeaderMutationResponse)(nil), "istio.wasm.example.header_mutation.HeaderMutationResponse")
	proto.RegisterMapType((map[string]string)(nil), "istio.wasm.example.header_mutation.HeaderMutationResponse.HeaderMutationEntry")
}

func init() {
	proto.RegisterFile("header_mutation.proto", fileDescriptor_8fe82433e62650b7)
}

var fileDescriptor_8fe82433e62650b7 = []byte{
	// 228 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xcd, 0x48, 0x4d, 0x4c,
	0x49, 0x2d, 0x8a, 0xcf, 0x2d, 0x2d, 0x49, 0x2c, 0xc9, 0xcc, 0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0x17, 0x52, 0xca, 0x2c, 0x2e, 0xc9, 0xcc, 0xd7, 0x2b, 0x4f, 0x2c, 0xce, 0xd5, 0x4b, 0xad,
	0x48, 0xcc, 0x2d, 0xc8, 0x49, 0xd5, 0x43, 0x53, 0xa9, 0xa4, 0xcf, 0x25, 0xea, 0x01, 0x16, 0xf2,
	0x85, 0x8a, 0x04, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0x89, 0x71, 0xb1, 0x25, 0xe7, 0xe7,
	0x67, 0x67, 0xa6, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x41, 0x79, 0x4a, 0x57, 0x18, 0xb9,
	0xc4, 0xd0, 0x75, 0x14, 0x17, 0xe4, 0xe7, 0x15, 0xa7, 0x0a, 0x95, 0x73, 0xf1, 0xa3, 0x19, 0x2f,
	0xc1, 0xac, 0xc0, 0xac, 0xc1, 0x6d, 0xe4, 0xa7, 0x47, 0xd8, 0x25, 0x7a, 0xd8, 0x0d, 0x45, 0x13,
	0x76, 0xcd, 0x2b, 0x29, 0xaa, 0x0c, 0xe2, 0xcb, 0x40, 0x11, 0x94, 0x72, 0xe4, 0x12, 0xc6, 0xa2,
	0x4c, 0x48, 0x80, 0x8b, 0x39, 0x3b, 0xb5, 0x12, 0xea, 0x7e, 0x10, 0x53, 0x48, 0x84, 0x8b, 0xb5,
	0x2c, 0x31, 0xa7, 0x34, 0x55, 0x82, 0x09, 0x2c, 0x06, 0xe1, 0x58, 0x31, 0x59, 0x30, 0x1a, 0x2d,
	0x61, 0x44, 0x0f, 0x88, 0xe0, 0xd4, 0xa2, 0xb2, 0xcc, 0xe4, 0x54, 0xa1, 0x2e, 0x46, 0x2e, 0x41,
	0xf7, 0xd4, 0x12, 0x54, 0x49, 0x21, 0x4b, 0x72, 0xbc, 0x04, 0x0e, 0x59, 0x29, 0x2b, 0xf2, 0x43,
	0x23, 0x89, 0x0d, 0x1c, 0xb3, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x11, 0x7b, 0x60, 0x6e,
	0xf2, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// HeaderMutationServiceClient is the client API for HeaderMutationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HeaderMutationServiceClient interface {
	GetHeaderMutation(ctx context.Context, in *HeaderMutationRequest, opts ...grpc.CallOption) (*HeaderMutationResponse, error)
}

type headerMutationServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewHeaderMutationServiceClient(cc grpc.ClientConnInterface) HeaderMutationServiceClient {
	return &headerMutationServiceClient{cc}
}

func (c *headerMutationServiceClient) GetHeaderMutation(ctx context.Context, in *HeaderMutationRequest, opts ...grpc.CallOption) (*HeaderMutationResponse, error) {
	out := new(HeaderMutationResponse)
	err := c.cc.Invoke(ctx, "/istio.wasm.example.header_mutation.HeaderMutationService/GetHeaderMutation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HeaderMutationServiceServer is the server API for HeaderMutationService service.
type HeaderMutationServiceServer interface {
	GetHeaderMutation(context.Context, *HeaderMutationRequest) (*HeaderMutationResponse, error)
}

// UnimplementedHeaderMutationServiceServer can be embedded to have forward compatible implementations.
type UnimplementedHeaderMutationServiceServer struct {
}

func (*UnimplementedHeaderMutationServiceServer) GetHeaderMutation(ctx context.Context, req *HeaderMutationRequest) (*HeaderMutationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHeaderMutation not implemented")
}

func RegisterHeaderMutationServiceServer(s *grpc.Server, srv HeaderMutationServiceServer) {
	s.RegisterService(&_HeaderMutationService_serviceDesc, srv)
}

func _HeaderMutationService_GetHeaderMutation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HeaderMutationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HeaderMutationServiceServer).GetHeaderMutation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/istio.wasm.example.header_mutation.HeaderMutationService/GetHeaderMutation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HeaderMutationServiceServer).GetHeaderMutation(ctx, req.(*HeaderMutationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _HeaderMutationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "istio.wasm.example.header_mutation.HeaderMutationService",
	HandlerType: (*HeaderMutationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetHeaderMutation",
			Handler:    _HeaderMutationService_GetHeaderMutation_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "header_mutation.proto",
}
